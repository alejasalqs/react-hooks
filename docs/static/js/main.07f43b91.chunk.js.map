{"version":3,"sources":["components/08-useReducer/TodoAddForm.js","Hooks/useForm.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["TodoAddForm","handleNewTodo","initialState","useState","values","setValues","e","target","name","value","useForm","description","handleInputChange","reset","onSubmit","preventDefault","trim","length","newTodo","id","Date","getTime","done","type","placeholder","autoComplete","className","onChange","TodoListItem","todo","index","handleToggle","handleDelete","onClick","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07f43b91.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"../../Hooks/useForm\";\n\nexport const TodoAddForm = ({ handleNewTodo }) => {\n  const [{ description }, handleInputChange, reset] = useForm({\n    description: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (description.trim().length <= 1) {\n      return;\n    }\n    const newTodo = {\n      id: new Date().getTime(),\n      description: description,\n      done: false,\n    };\n\n    handleNewTodo(newTodo);\n\n    reset();\n  };\n  return (\n    <>\n      <h4>Agregar</h4>\n      <hr />\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"description\"\n          autoComplete=\"off\"\n          className=\"form-control\"\n          onChange={handleInputChange}\n          value={description}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary mt-1 btn-block\"\n        >\n          Agregar\n        </button>\n      </form>\n    </>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const handleInputChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from \"react\";\n\nexport const TodoListItem = ({ todo, index, handleToggle, handleDelete }) => {\n  return (\n    <>\n      <li key={todo.id} className=\"list-group-item\">\n        <p\n          className={`${todo.done && \"complete\"}`}\n          onClick={() => handleToggle(todo.id)}\n        >\n          {index + 1}. {todo.description}\n        </p>\n        <button\n          className=\"btn btn-danger\"\n          onClick={() => handleDelete(todo.id)}\n        >\n          Borrar\n        </button>\n      </li>\n    </>\n  );\n};\n","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\nexport const TodoList = ({ todos, handleToggle, handleDelete }) => {\n  return (\n    <>\n      <ul className=\"list-group list-group-flush\">\n        {todos.map((todo, i) => (\n          <TodoListItem\n            key={todo.id}\n            todo={todo}\n            index={i}\n            handleToggle={handleToggle}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n","export const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"add\": // Agrega un nuevo registro utilizando el espread operator\n      return [...state, action.payload];\n    case \"delete\": // filter regresa un nuevo arreglo\n      return state.filter((todo) => todo.id !== action.payload); // En este caso el payload es el id\n    case \"toggle\": //version corta del toggle\n      return state.map((todo) =>\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n      );\n    case \"toggle-old\": // version larga del toggle\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        } else {\n          // Es importante retornar algo siempre en este caso\n          return todo;\n        }\n      });\n\n    default:\n      return state; // Es mejor siempre definir el defaul\n  }\n};\n","import React, { useEffect, useReducer } from \"react\";\nimport \"./styles.css\";\nimport { TodoAddForm } from \"./TodoAddForm\";\nimport { TodoList } from \"./TodoList\";\nimport { todoReducer } from \"./todoReducer\";\n// Un useReducer es una alternativa al useState\n// Es mejor para estados muy complejos\n\nconst init = () => {\n  // Si el primer valor es null retorna un objeto vacio\n  return JSON.parse(localStorage.getItem(\"todos\")) || []; //Lo que retornar esta funcion serÃ¡ el initialState\n};\n\nexport const TodoApp = () => {\n  //1 argumento: funcion del reducer\n  // 2 argumento: estado inicial\n  // 3 argumento: Funcion para iniciar states si es procesado o realiza varias acciones\n  // dispatch: dispara las acciones al reducer\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\n\n  useEffect(() => {\n    // si los todos cambian grabamos en el localStorage\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const handleNewTodo = (newTodo) => {\n    dispatch({\n      type: \"add\",\n      payload: newTodo,\n    });\n  };\n  const handleDelete = (todoId) => {\n    const action = {\n      // creamos la accion\n      type: \"delete\",\n      payload: todoId,\n    };\n\n    // hacemos dispatch del reducer\n    dispatch(action);\n  };\n\n  const handleToggle = (todoId) => {\n    dispatch({\n      // otra manera de hacer el dispatch\n      type: \"toggle\",\n      payload: todoId,\n    });\n  };\n\n  /*const handleSubmit = (e) => {\n    e.preventDefault();\n    if (description.trim().length <= 1) {\n      return;\n    }\n\n    const newTodo = {\n      id: new Date().getTime(),\n      description: description,\n      done: false,\n    };\n\n    const action = {\n      type: \"add\",\n      payload: newTodo,\n    };\n\n    // Esta funcion es la encargada de llamar el reducer\n    // Se puede mandar como referencia a un componente hijo y siempre va a saber\n    // a que reducer pertenece porque se pasan por referencia en JS\n    dispatch(action);\n\n    reset();\n  };*/\n\n  return (\n    <>\n      <h1>Todo APP ({todos.length})</h1>\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <TodoList\n            todos={todos}\n            handleToggle={handleToggle}\n            handleDelete={handleDelete}\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <TodoAddForm handleNewTodo={handleNewTodo} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { TodoApp } from \"./components/08-useReducer/TodoApp\";\n//import { MainApp } from \"./components/09-useContext/MainApp\";\n//import { PrincipalRouter } from \"./Routes/PrincipalRouter\";\n//import { CallbackHook } from \"./components/06-Memo/CallbackHook\";\n//import { Padre } from \"./components/07-tarea-memo/Padre\";\n//import { MemoHook } from \"./components/06-Memo/MemoHook\";\n//import { LayoutEffect } from \"./components/05-UseLayOutEffect/LayoutEffect\";\n//import { Memorize } from \"./components/06-Memo/Memorize\";\n//import { FocusScreen } from \"./components/04-useRef/FocusScreen\";\n//import { RealExampleRef } from \"./components/04-useRef/RealExampleRef\";\n//import { FormWithCustomHook } from \"./components/02-useEffect/FormWithCustomHook\";\n//import { MultipleCustomHooks } from \"./components/examples/MultipleCustomHooks\";\n//import { SimpleForm } from \"./components/02-useEffect/SimpleForm\";\n//import { CounterApp } from \"./components/01-useState/CounterApp\";\n//import { CounterWithCustomHook } from \"./components/01-useState/CounterWithCustomHook\";\n//import { HooksApp } from \"./HooksApp\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}